@model IEnumerable<IndividualLoginExample.Models.Role>
@{
    ViewBag.Title = "Roles";
}
<h4>Roles</h4>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <thead>
    </thead>
    <tbody>
    </tbody>
</table>

@section scripts {
    <script type="text/javascript">

        $(document).ready(function () {

            loadTable();
        });

        function loadTable() {
            var tableOfResults = null;
            if ($.fn.DataTable.isDataTable('.table')) {
                tableOfResults = $('.table').DataTable();
            }
            else {
                tableOfResults = $('.table').DataTable({
                    "dom": '<"top"lftipr><"clear">', // (f)ilter, (l)ength, (t)able, (i)nfo summary, (p)agination, p(r)ocessing
                    "pagingType": "full_numbers",
                    "paging": true, // enable paging and page numbers
                    "ordering": false, // disable ordering on all columns
                    "orderMulti": false,
                    "order": [[1, "desc"]],
                    "lengthChange": true,
                    "lengthMenu": [5, 10, 20, 50, 100, 200], //Define the Options Available for changing how many rows would be visible at a time.
                    "pageLength": 10,
                    "processing": true,    //display the processing popup when the data is being retrieved
                    //responsive: true,   consolidate columns when screen is very small
                    "serverSide": true,  //get data for the columns from the server
                    "ajax": {
                        "url": "@Url.Action("RoleDataTableHandler")",//get the data from the TableHandler method
                        "data": function (data) { // use these to send custom parameters instead of the fnServerParams when using sAjaxSource

                        },
                        "type": "POST" // set to post to avoid getting error that the request exceeds the maximum query string limit
                    },
                    //"rowCallback": function (row, data, index) {

                    //},
                    "columnDefs": [
                        { "data": "Id", "title": "Id", "targets": 0 },
                        { "data": "Name", "title": "Name", "targets": 1 }
                    ]
                });
            }
        }
    </script>
}